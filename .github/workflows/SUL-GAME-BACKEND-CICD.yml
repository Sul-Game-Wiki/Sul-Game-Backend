name: SUL-GAME-BACKEND-CICD

on:
  push:
    branches:
      - main
      - test
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create Firebase config directory
        run: mkdir -p src/main/resources/firebase

      - name: Add Firebase service account key
        run: |
          echo "${{ secrets.FIREBASE_ADMINSDK }}" > src/main/resources/firebase/sul-game-firebase-adminsdk.json
        shell: bash

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Docker setup
        uses: docker/setup-buildx-action@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sul-game-back-container:${{ github.ref_name }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/sul-game-back-container:cache
          cache-to: type=inline

  deploy:
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 2022
          script: |
            export PATH=$PATH:/usr/local/bin
            export PW=${{ secrets.SERVER_PASSWORD }}
            BRANCH=${{ github.ref_name }}
            PORT=8080
            CONTAINER_NAME="sul-game-back"
            if [ "$BRANCH" == "test" ]; then
              CONTAINER_NAME="sul-game-back-test"
              PORT=8085
            elif [ "$BRANCH" == "main" ]; then
              PORT=8086
            fi
            echo $PW | sudo -S docker pull ${{ secrets.DOCKERHUB_USERNAME }}/sul-game-back-container:${BRANCH}
            echo $PW | sudo -S docker stop $CONTAINER_NAME || true
            echo $PW | sudo -S docker rm $CONTAINER_NAME || true
            echo $PW | sudo -S docker run -d -p ${PORT}:8080 --name $CONTAINER_NAME \
              -e TZ=Asia/Seoul \
              -v /etc/localtime:/etc/localtime:ro \
              -e DB_HOST=${{ secrets.DB_HOST }} \
              -e DB_NAME=${{ secrets.DB_NAME }} \
              -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }} \
              -e GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }} \
              -e KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }} \
              -e KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }} \
              -e JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }} \
              -e JWT_ACCESS_EXP_TIME=${{ secrets.JWT_ACCESS_EXP_TIME }} \
              -e JWT_REFRESH_EXP_TIME=${{ secrets.JWT_REFRESH_EXP_TIME }} \
              -e AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
              -e AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
              ${{ secrets.DOCKERHUB_USERNAME }}/sul-game-back-container:${BRANCH}
